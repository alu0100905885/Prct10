var search_data = {"index":{"searchIndex":["alimentos","listas","object","plato_","platos","prct6","error","<=>()","<=>()","cal()","cal_plato()","d_emision()","d_nombre()","d_proteinas()","d_terreno()","each()","emisiones_plato()","extraer_final()","extraer_inicio()","form()","huella()","insertar_cabeza()","insertar_cola()","insertar_varios()","new()","new()","new()","new()","porcentaje()","suma()","to_s()","to_s()","to_s()","code_of_conduct","gemfile","license","readme","rakefile","setup","prct6.gemspec"],"longSearchIndex":["alimentos","listas","object","plato_","platos","prct6","prct6::error","alimentos#<=>()","plato_#<=>()","alimentos#cal()","platos#cal_plato()","alimentos#d_emision()","alimentos#d_nombre()","alimentos#d_proteinas()","alimentos#d_terreno()","listas#each()","plato_#emisiones_plato()","listas#extraer_final()","listas#extraer_inicio()","alimentos#form()","plato_#huella()","listas#insertar_cabeza()","listas#insertar_cola()","listas#insertar_varios()","alimentos::new()","listas::new()","plato_::new()","platos::new()","platos#porcentaje()","plato_#suma()","listas#to_s()","plato_#to_s()","platos#to_s()","","","","","","",""],"info":[["Alimentos","","Alimentos.html","","<p>Declaración de la clase alimentos\n"],["Listas","","Listas.html","","<p>Inicializació de la clase lista\n"],["Object","","Object.html","",""],["Plato_","","Plato_.html","","<p>Clase plato_ heredada de clase platos\n"],["Platos","","Platos.html","","<p>Clase platos que utiliza alimentos\n"],["Prct6","","Prct6.html","",""],["Prct6::Error","","Prct6/Error.html","",""],["<=>","Alimentos","Alimentos.html#method-i-3C-3D-3E","(other)","<p>Método &lt;=&gt; Compara las calorias del alimento\n"],["<=>","Plato_","Plato_.html#method-i-3C-3D-3E","(other)","<p>Método &lt;=&gt; Método para comparar la eficiencia energética entre platos\n"],["cal","Alimentos","Alimentos.html#method-i-cal","()","<p>Método cal @return: Devuelve las calorias que aporta un alimento\n"],["cal_plato","Platos","Platos.html#method-i-cal_plato","()","<p>Método cal_plato Método para hallar las calorias que posee un plato\n@return: Devuelve las calorias del …\n"],["d_emision","Alimentos","Alimentos.html#method-i-d_emision","()","<p>Método d_emision @return: Devuelve las emisiones del alimento\n"],["d_nombre","Alimentos","Alimentos.html#method-i-d_nombre","()","<p>Método d_nombre @return: Devuelve el nombre del alimento\n"],["d_proteinas","Alimentos","Alimentos.html#method-i-d_proteinas","()","<p>Método d_prteinas @return: Devuelve las proteinas del alimento\n"],["d_terreno","Alimentos","Alimentos.html#method-i-d_terreno","()","<p>Método d_terreno @return: Devuelve el terreno que representa hacer el\nalimento\n"],["each","Listas","Listas.html#method-i-each","()","<p>Método each Recorre la lista haciendo yield del valor\n"],["emisiones_plato","Plato_","Plato_.html#method-i-emisiones_plato","()","<p>Método emisiones_plato Método para calcular la cantidad de emisiones\ngeneradas en la realización de un …\n"],["extraer_final","Listas","Listas.html#method-i-extraer_final","()","<p>Método extraer_final Extrae un valor por la cola\n"],["extraer_inicio","Listas","Listas.html#method-i-extraer_inicio","()","<p>Método extraer_inicio Extrae un valor por la cabeza\n"],["form","Alimentos","Alimentos.html#method-i-form","()","<p>Método form\n"],["huella","Plato_","Plato_.html#method-i-huella","()","<p>Método huella Método para hallar la huella nutricional de cada plato\n@return: Devuelve la huella generada; …\n"],["insertar_cabeza","Listas","Listas.html#method-i-insertar_cabeza","(x)","<p>Método insertar_cabeza Inserta un valor en la lista por la cabeza\n"],["insertar_cola","Listas","Listas.html#method-i-insertar_cola","(x)","<p>Método insertar_cola Inserta un valor en la lista por la cola\n"],["insertar_varios","Listas","Listas.html#method-i-insertar_varios","(nodos)","<p>Método insertar_varios Inserta multiples valores por la cabeza\n"],["new","Alimentos","Alimentos.html#method-c-new","(nombre, proteinas, carbo, lipidos, emision, terreno)","<p>Método initialize Inicializa los diferentes atributos de la clase\n"],["new","Listas","Listas.html#method-c-new","(cabeza,cola)","<p>Método initialize Inicializa los atributos de la clase\n"],["new","Plato_","Plato_.html#method-c-new","(nombre, alimentos, peso, peso_total, cal_array, emisiones_array)","<p>Método initialize Método para inicializar los diferentes atributos de la\nclase\n"],["new","Platos","Platos.html#method-c-new","(nombre, alimentos, peso, peso_total, cal_array, emisiones_array)","<p>Método initialize Inicializa los diferentes atributos de la clase\n"],["porcentaje","Platos","Platos.html#method-i-porcentaje","(alimentos, peso, peso_total)","<p>Método porcentaje Calcula, segun los atributos dados, el porcentaje de\nproteinas, lipidos o carbohidratos …\n"],["suma","Plato_","Plato_.html#method-i-suma","(alimentos)","<p>Método suma Método anteriormente utilizado para calcular todas las sumas,\nque ahora solo ocupa la suma …\n"],["to_s","Listas","Listas.html#method-i-to_s","()",""],["to_s","Plato_","Plato_.html#method-i-to_s","()","<p>Método to_s Método para sacar informacion formateada\n"],["to_s","Platos","Platos.html#method-i-to_s","()","<p>Método to_s Método para sacar informacion formateada @return: Devuelve los\ndatos formateados\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>In the interest of fostering an open and welcoming environment, …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in prct6.gemspec gem\n&#39;nokogiri&#39; …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2019 Alejandro Medina\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>Prct6\n<p>Welcome to your new gem! In this directory, you&#39;ll find the files you\nneed to be able to package …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["prct6.gemspec","","prct6_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless\n$LOAD_PATH.include?(lib) …\n"]]}}